// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "center",
      "marginLeft": "8%",
      "marginRight": "8%",
    }
  }
>
  <View
    onLayout={[Function]}
  >
    <View
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 4,
          "right": 4,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="box-only"
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="none"
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "rgba(0, 0, 0, 0.38)",
              "borderBottomWidth": 0.5,
              "height": 66,
              "paddingBottom": 8,
              "paddingTop": 31,
            }
          }
        >
          <View
            style={
              Object {
                "position": "absolute",
                "top": 35.5,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "rgba(0, 0, 0, 0.38)",
                  "fontSize": 18,
                }
              }
            >
              Subscription Group
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              absoluteRTLLayout={false}
              allowFontScaling={true}
              autoCapitalize="sentences"
              data={
                Array [
                  Object {
                    "value": "Default",
                  },
                  Object {
                    "value": "Customized",
                  },
                ]
              }
              disableFullscreenUI={true}
              dropdownMargins={
                Object {
                  "max": 16,
                  "min": 8,
                }
              }
              dropdownOffset={
                Object {
                  "left": 0,
                  "top": 32,
                }
              }
              editable={false}
              itemColor="rgba(0, 0, 0, .54)"
              itemCount={4}
              itemPadding={8}
              labelExtractor={[Function]}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              propsExtractor={[Function]}
              rejectResponderTermination={true}
              renderAccessory={[Function]}
              rippleDuration={400}
              selectedItemColor="royalblue"
              selectionColor="rgb(0, 145, 234)"
              shadeOpacity={0.12}
              style={
                Array [
                  Object {
                    "flex": 1,
                    "margin": 0,
                    "padding": 0,
                    "top": 2,
                  },
                  Object {
                    "color": "rgba(0, 0, 0, .87)",
                    "fontSize": 18,
                    "height": 27,
                    "textAlign": "left",
                  },
                  undefined,
                ]
              }
              underlineColorAndroid="transparent"
              useNativeDriver={false}
              value=""
              valueExtractor={[Function]}
            />
            <View
              style={
                Object {
                  "alignSelf": "flex-start",
                  "justifyContent": "center",
                  "top": 2,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "height": 24,
                    "justifyContent": "center",
                    "width": 24,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "height": 6,
                      "overflow": "hidden",
                      "width": 12,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 8,
                          "transform": Array [
                            Object {
                              "translateY": -4,
                            },
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                          "width": 8,
                        },
                        Object {
                          "backgroundColor": "rgba(0, 0, 0, .38)",
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "height": 8,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgb(213, 0, 0)",
                    "fontSize": 0,
                    "opacity": 0,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-start",
                  "bottom": 0,
                  "left": 0,
                  "paddingVertical": 4,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "rgba(0, 0, 0, .38)",
                    "fontSize": 12,
                    "opacity": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onLayout={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onRippleAnimation={[Function]}
        onStartShouldSetResponder={[Function]}
        pointerEvents="box-only"
        rippleCentered={false}
        rippleColor="rgba(0, 0, 0, .38)"
        rippleDuration={400}
        rippleFades={true}
        rippleOpacity={0.54}
        rippleSequential={true}
        rippleSize={0}
        style={
          Object {
            "height": 51,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 16,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "bottom": 0,
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "borderRadius": 0,
              },
            ]
          }
        />
      </View>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "portrait-upside-down",
          "landscape",
          "landscape-left",
          "landscape-right",
        ]
      }
      transparent={true}
      visible={false}
    >
      <View
        onResponderRelease={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(255, 255, 255, 1.0)",
                "borderRadius": 2,
                "position": "absolute",
                "shadowColor": "rgba(0, 0, 0, 1.0)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.54,
                "shadowRadius": 2,
              },
              Object {
                "height": 102,
                "left": undefined,
                "top": undefined,
                "transform": Array [
                  Object {
                    "translateY": -51,
                  },
                ],
                "width": undefined,
              },
              undefined,
            ]
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "paddingVertical": 8,
              }
            }
            data={
              Array [
                Object {
                  "value": "Default",
                },
                Object {
                  "value": "Customized",
                },
              ]
            }
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEnabled={false}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            style={
              Object {
                "borderRadius": 2,
                "flex": 1,
              }
            }
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusAnimation={null}
                  focusAnimationDuration={225}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 6,
                      "left": 4,
                      "right": 4,
                      "top": 6,
                    }
                  }
                  onClick={[Function]}
                  onLayout={[Function]}
                  onPress={[Function]}
                  onPressIn={[Function]}
                  onPressOut={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  rippleCentered={false}
                  rippleColor="rgba(0, 0, 0, .38)"
                  rippleDuration={400}
                  rippleFades={true}
                  rippleOpacity={0.54}
                  rippleSequential={true}
                  rippleSize={0}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "borderRadius": 0,
                      "height": 43,
                      "justifyContent": "center",
                      "paddingLeft": undefined,
                      "paddingRight": undefined,
                      "paddingVertical": 8,
                    }
                  }
                  useNativeDriver={true}
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "textAlign": "left",
                        },
                        undefined,
                        Object {
                          "color": "royalblue",
                          "fontSize": 18,
                        },
                      ]
                    }
                  >
                    Default
                  </Text>
                  <View
                    style={
                      Object {
                        "backgroundColor": "rgba(0, 0, 0, .38)",
                        "borderRadius": 0,
                        "bottom": 0,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "bottom": 0,
                          "left": 0,
                          "overflow": "hidden",
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        },
                        Object {
                          "borderRadius": 0,
                        },
                      ]
                    }
                  />
                </View>
              </View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  accessible={true}
                  focusAnimation={null}
                  focusAnimationDuration={225}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 6,
                      "left": 4,
                      "right": 4,
                      "top": 6,
                    }
                  }
                  onClick={[Function]}
                  onLayout={[Function]}
                  onPress={[Function]}
                  onPressIn={[Function]}
                  onPressOut={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  pointerEvents="box-only"
                  rippleCentered={false}
                  rippleColor="rgba(0, 0, 0, .38)"
                  rippleDuration={400}
                  rippleFades={true}
                  rippleOpacity={0.54}
                  rippleSequential={true}
                  rippleSize={0}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "borderRadius": 0,
                      "height": 43,
                      "justifyContent": "center",
                      "paddingLeft": undefined,
                      "paddingRight": undefined,
                      "paddingVertical": 8,
                    }
                  }
                  useNativeDriver={true}
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "textAlign": "left",
                        },
                        undefined,
                        Object {
                          "color": "royalblue",
                          "fontSize": 18,
                        },
                      ]
                    }
                  >
                    Customized
                  </Text>
                  <View
                    style={
                      Object {
                        "backgroundColor": "rgba(0, 0, 0, .38)",
                        "borderRadius": 0,
                        "bottom": 0,
                        "left": 0,
                        "opacity": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "bottom": 0,
                          "left": 0,
                          "overflow": "hidden",
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        },
                        Object {
                          "borderRadius": 0,
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </Modal>
  </View>
  <View
    style={
      Object {
        "marginLeft": "30%",
        "marginRight": "30%",
        "marginTop": "20%",
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Enter
        </Text>
      </View>
    </View>
  </View>
</View>
`;
